import pytest

from poetry.semver import sort, rsort, statisfies, satisfied_by


@pytest.mark.parametrize(
    'version, constraint',
    [
        ('1.2.3', '^1.2.3+build'),
        ('1.3.0', '^1.2.3+build'),
        ('1.3.0-beta', '>1.2'),
        ('1.2.3-beta', '<=1.2.3'),
        ('1.0.0', '1.0.0'),
        ('1.2.3', '*'),
        ('v1.2.3', '*'),
        ('1.0.0', '>=1.0.0'),
        ('1.0.1', '>=1.0.0'),
        ('1.1.0', '>=1.0.0'),
        ('1.0.1', '>1.0.0'),
        ('1.1.0', '>1.0.0'),
        ('2.0.0', '<=2.0.0'),
        ('1.9999.9999', '<=2.0.0'),
        ('0.2.9', '<=2.0.0'),
        ('1.9999.9999', '<2.0.0'),
        ('0.2.9', '<2.0.0'),
        ('1.0.0', '>= 1.0.0'),
        ('1.0.1', '>=  1.0.0'),
        ('1.1.0', '>=   1.0.0'),
        ('1.0.1', '> 1.0.0'),
        ('1.1.0', '>  1.0.0'),
        ('2.0.0', '<=   2.0.0'),
        ('1.9999.9999', '<= 2.0.0'),
        ('0.2.9', '<=  2.0.0'),
        ('1.9999.9999', '<    2.0.0'),
        ('0.2.9', "<\t2.0.0"),
        ('v0.1.97', '>=0.1.97'),
        ('0.1.97', '>=0.1.97'),
        ('1.2.4', '0.1.20 || 1.2.4'),
        ('0.0.0', '>=0.2.3 || <0.0.1'),
        ('0.2.3', '>=0.2.3 || <0.0.1'),
        ('0.2.4', '>=0.2.3 || <0.0.1'),
        ('2.1.3', '2.x.x'),
        ('1.2.3', '1.2.x'),
        ('2.1.3', '1.2.x || 2.x'),
        ('1.2.3', '1.2.x || 2.x'),
        ('1.2.3', 'x'),
        ('2.1.3', '2.*.*'),
        ('1.2.3', '1.2.*'),
        ('2.1.3', '1.2.* || 2.*'),
        ('1.2.3', '1.2.* || 2.*'),
        ('1.2.3', '*'),
        ('2.9.0', '^2.4'),  # >= 2.4.0 < 3.0.0
        ('2.4.5', '~2.4'),
        ('1.2.3', '~1'),  # >= 1.0.0 < 2.0.0
        ('1.0.7', '~1.0'),  # >= 1.0.0 < 1.1.0
        ('1.0.0', '>=1'),
        ('1.0.0', '>= 1'),
        ('1.2.8', '>1.2'),  # > 1.2.0
        ('1.1.1', '<1.2'),  # < 1.2.0
        ('1.1.1', '< 1.2'),
        ('1.2.3', '~1.2.1 >=1.2.3'),
        ('1.2.3', '~1.2.1 =1.2.3'),
        ('1.2.3', '~1.2.1 1.2.3'),
        ('1.2.3', '~1.2.1 >=1.2.3 1.2.3'),
        ('1.2.3', '~1.2.1 1.2.3 >=1.2.3'),
        ('1.2.3', '~1.2.1 1.2.3'),
        ('1.2.3', '>=1.2.1 1.2.3'),
        ('1.2.3', '1.2.3 >=1.2.1'),
        ('1.2.3', '>=1.2.3 >=1.2.1'),
        ('1.2.3', '>=1.2.1 >=1.2.3'),
        ('1.2.8', '>=1.2'),
        ('1.8.1', '^1.2.3'),
        ('0.1.2', '^0.1.2'),
        ('0.1.2', '^0.1'),
        ('1.4.2', '^1.2'),
        ('1.4.2', '^1.2 ^1'),
        ('0.0.1-beta', '^0.0.1-alpha'),
    ]
)
def test_statisfies_positive(version, constraint):
    assert statisfies(version, constraint)


@pytest.mark.parametrize(
    'version, constraint',
    [
        ('2.0.0', '^1.2.3+build'),
        ('1.2.0', '^1.2.3+build'),
        ('1.0.0beta', '1'),
        ('1.0.1', '1.0.0'),
        ('0.0.0', '>=1.0.0'),
        ('0.0.1', '>=1.0.0'),
        ('0.1.0', '>=1.0.0'),
        ('0.0.1', '>1.0.0'),
        ('0.1.0', '>1.0.0'),
        ('3.0.0', '<=2.0.0'),
        ('2.9999.9999', '<=2.0.0'),
        ('2.2.9', '<=2.0.0'),
        ('2.9999.9999', '<2.0.0'),
        ('2.2.9', '<2.0.0'),
        ('v0.1.93', '>=0.1.97'),
        ('0.1.93', '>=0.1.97'),
        ('1.2.3', '0.1.20 || 1.2.4'),
        ('0.0.3', '>=0.2.3 || <0.0.1'),
        ('0.2.2', '>=0.2.3 || <0.0.1'),
        ('1.1.3', '2.x.x'),
        ('3.1.3', '2.x.x'),
        ('1.3.3', '1.2.x'),
        ('3.1.3', '1.2.x || 2.x'),
        ('1.1.3', '1.2.x || 2.x'),
        ('1.1.3', '2.*.*'),
        ('3.1.3', '2.*.*'),
        ('1.3.3', '1.2.*'),
        ('3.1.3', '1.2.* || 2.*'),
        ('1.1.3', '1.2.* || 2.*'),
        ('1.1.2', '2'),
        ('2.4.1', '2.3'),
        ('3.0.0', '~2.4'),  # >= 2.4.0 < 3.0.0
        ('2.3.9', '~2.4'),
        ('0.2.3', '~1'),  # >= 1.0.0 < 2.0.0
        ('1.0.0', '<1'),
        ('1.1.1', '>=1.2'),
        ('2.0.0beta', '1'),
        ('0.5.4-alpha', '~v0.5.4-beta'),
        ('1.2.2', '^1.2.3'),
        ('1.1.9', '^1.2'),
    ]
)
def test_statisfies_negative(version, constraint):
    assert not statisfies(version, constraint)


@pytest.mark.parametrize(
    'constraint, versions, expected',
    [
        (
            '~1.0',
            ['1.0', '1.0.9', '1.2', '2.0', '2.1', '0.9999.9999'],
            ['1.0', '1.0.9'],
        ),
        (
            '>1.0 <3.0 || >=4.0',
            ['1.0', '1.1', '2.9999.9999', '3.0', '3.1', '3.9999.9999', '4.0', '4.1'],
            ['1.1', '2.9999.9999', '4.0', '4.1'],
        ),
        (
            '^0.2.0',
            ['0.1.1', '0.1.9999', '0.2.0', '0.2.1', '0.3.0'],
            ['0.2.0', '0.2.1'],
        ),
    ]
)
def test_satisfied_by(constraint, versions, expected):
    assert satisfied_by(versions, constraint) == expected


@pytest.mark.parametrize(
    'versions, sorted, rsorted',
    [
        (
            ['1.0', '0.1', '0.1', '3.2.1', '2.4.0-alpha', '2.4.0'],
            ['0.1', '0.1', '1.0', '2.4.0-alpha', '2.4.0', '3.2.1'],
            ['3.2.1', '2.4.0', '2.4.0-alpha', '1.0', '0.1', '0.1'],
        )
    ]
)
def test_sort(versions, sorted, rsorted):
    assert sort(versions) == sorted
    assert rsort(versions) == rsorted
